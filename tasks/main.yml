---

#- name: replace cobbler-s sources.list to mainline
#  template:
#    src: sources.list.j2
#    dest: /etc/apt/sources.list

#absent

- name: delete cobbler's sources.list
  file:
    path: '/etc/apt/sources.list'
    state: absent

- name: add Oficial Ubuntu repos, ElementaryOS PPAs, nvidia ppa, and owncloud official repo
  apt_repository:
    repo: "{{ item }}"
    update_cache: yes
  with_items:
    - 'ppa:elementary-os/stable'
    - 'ppa:elementary-os/os-patches'
    - 'ppa:graphics-drivers/ppa'
    - 'deb http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Ubuntu_16.04/ /'
    - "deb http://{{ apt_mirror_county }}.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse"
    - "deb http://{{ apt_mirror_county }}.archive.ubuntu.com/ubuntu/ xenial-security main restricted universe multiverse"
    - "deb http://{{ apt_mirror_county }}.archive.ubuntu.com/ubuntu/ xenial-updates main restricted universe multiverse"
    - "deb http://{{ apt_mirror_county }}.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse"
    - 'deb http://archive.canonical.com/ubuntu xenial partner'

- name: Add owncloud apt key
  apt_key:
    url: "http://download.opensuse.org/repositories/isv:ownCloud:desktop/Ubuntu_16.04/Release.key"
    state: present

- name: Upgrade system
  apt:
    upgrade: full
    update_cache: yes

- name: install ElementaryOS
  apt:
    name: "elementary-desktop"
    state: present

- name:  get recommended ubuntu drivers
  shell: "ubuntu-drivers devices | grep recommended | awk '{print $3}'"
  register: recommended_nvidia

- name: fix apt-get before install skype i386 packages
  shell: 'apt-get update'

- name: install some packages
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - 'gconf-service'
    - 'libgconf-2-4'
    - 'software-properties-common'
    - 'skype'
   # temporary commented. No nvidia in the test VM. Uncomment in production!
    - "{{ recommended_nvidia.stdout }}"
    - 'nvidia-settings'
    - 'xfonts-terminus'
    - "qemu-kvm"
    - "qemu"
    - "virt-manager"
    - "libvirt-bin"
    - "ssh"
    - 'atop'
    - 'htop'
    - 'chromium-browser'
    - 'firefox'
    - 'adobe-flashplugin'
       #steam's suggestion and depency
    - 'xfonts-cyrillic'
    - 'curl'
    - 'xfonts-cyrillic'
    - 'curl'
    - 'nfs-common'
    - 'mythes-en-us'
    - 'mythes-ru'
    - 'libreoffice-writer'
    - 'libreoffice-pdfimport'
    - 'libreoffice-calc'
    - 'smplayer'
    - 'remmina'
    - 'qbittorrent'

- name: fix apt-get after install skype i386 packages
  shell: 'apt-get install -fy'

- name: Install owncloud packages
  apt:
    name: 'owncloud-client-nautilus'
    allow_unauthenticated: yes

- name: get user's list
  shell: "cat /etc/passwd | grep bash | awk -F: '{print $1}'"
  register: system_users

- name:  set terminal settings for all users with bash shell
  shell: "gsettings set org.pantheon.terminal.settings font 'Terminus 36'"
  become_user: "{{ item }}"
  with_items: "{{ system_users.results }}"

- name: download Skype alfa (works together with old 4.3, useful to have 2 different skype online. Also MS have a plans to disable 4.3)
  get_url:
    url: 'https://go.skype.com/skypeforlinux-64-alpha.deb'
    dest: '/tmp/skypeforlinux-64-alpha.deb'

- name: download latest Steam
  get_url:
    url: 'https://steamcdn-a.akamaihd.net/client/installer/steam.deb'
    dest: '/tmp/steam.deb'

#- name: Accept steam's question
#  debconf:
#    name: 'steam'
#    question: 'steam/question'
#    value: ' I AGREE'
#    vtype: select
#
#- name: Accept steam's license
#  debconf:
#    name: 'steam'
#    question: 'steam/license'
#    value: ''
#    vtype: note

- name: blacklist nouveau driver
  kernel_blacklist:
    name: nouveau
    state: present

- name: Install a .deb package of the Skype alfa and Steam
  apt:
    deb: "{{ item }}"
  with_items:
   - '/tmp/skypeforlinux-64-alpha.deb'
   - '/tmp/steam.deb'

- name: Fix cobbler-s settings of network
  template:
    src: interfaces.j2
    dest: /etc/network/interfaces

- name: Clean Ubuntu packages
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - 'plymouth-theme-ubuntu-text'
    - 'unity-greeter'
    - 'unity-control-center-signon'

- name: fstab options for root file system
  mount:
    name: /
    src: "UUID={{ item.uuid }}"
    opts: "rw,errors=remount-ro,noatime,discard"
    fstype: "{{ item.fstype }}"
    state: present
  with_items: ansible_mounts
  when: item.mount == "/"

- name: fstab options for home file system
  mount:
    name: /home
    src:  "UUID={{ item.uuid }}"
    opts: "rw,errors=remount-ro,noatime,discard"
    fstype: "{{ item.fstype }}"
    state: present
  with_items: ansible_mounts
  when: item.mount == "/home"